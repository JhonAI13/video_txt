E aí, pessoal, vamos começar agora tudo bom?
Espera um Zoom no Tinho, só para que se vici entrar, está acostumando a que ainda com Zoom,
hoje a gente vai prometir, a gente vai fazer juntos aqui o projeto da Espención,
que a gente não conseguiu matar na semana da Sada, e vamos também começar,
veio o conteúdo da nossa Espención, vamos seguir a profundão do pai, então vamos no entrar
hoje em sonários e funções, então a gente vai começar a entender mais poucas estruturas que são
um pouco mais complexas, mas também novamente sem ser greio, sem saber.
A gente vai passar passo aqui e primeiro para começar então vamos, eu vou compartilhar
o projeto da Tela, deixa eu só abrir, eu vou compartilhar e a gente vai fazer juntos o projeto
um, então eu sei que já já foi entregue, então seja daimentar a Tessa Mela Fedebeck,
mas ela é igual a gente fazer junto, para ver como funciona a gente pensamento,
como vai desenvolver junto assim, então beleza, vou se abotar aqui na tela,
então agora é isso que eu estou com o projeto um aberto, então a gente vai dar uma revisitada,
aqui ele passava, a gente foi passando um ponto a pouco, né, gente tem algumas tarefas,
onde ele deu uma revisitada, que ele falou que a gente deve alcarar e usar a id,
de string para num martiro, aí os hernêmios, está com o espaçoamento errado, então isso acontece bastante,
né, a gente pegar stringes que tem, eu vou dar uma metade aqui também, que está,
com o hotel grande, aí, olha, olha, olha, olha, olha, olha, olha, olha, olha, olha, olha, olha que a gente tem essa variável
que está com o espaçoamento errado, né, isso acontece bastante, então a gente vai ter que fazer extraatamento,
aqui a gente tem uma tipo de id, que tá como forte, né, então ele está com,
a valor percentual e com o ter deveria estar com valor inteiro, e aqui a gente tem uma lista
que tá com tudo, coletra mais luz com a gente deveria convertir, esse valor esprealêpedas minutos,
então vamos passar rapidamente aqui, aqui a gente vai, a gente vai entrar no detalhe, mas a gente vai fazer
os tratamentos, né, aqui, só de ele estar essa célula, e aqui, beleza, a gente tem um nome do usuário,
a gente pode ver que a gente tem o Mike Reed, né, a gente tem aqui os espaços em branch,
então a gente tem algumas alternativas aqui vamos, a gente já triboiu, né, o valor tá com espaço,
então a gente tem algumas alternativas, a gente pode chamar, por exemplo, o estrip e o que ele traz para a gente,
ele traz o Mike Reed sem o espaço, então essa é uma alternativa, mas aqui é o detalhe, quando eu chamo,
só o estrip sem atribuir uma nova variável, ele basicamente ele só faz operação, né,
então aqui ele roda, mas ele não efetiva ali, não garam, não sei o que os aí efetiva, eu tenho que vim aqui,
e botar os enemigos igual, aqui o que a gente viu, então os enemigos estrip, ele vai ser agora efetivado,
vai ser o novo, os enemigos, e agora sim, agora eu vou dar só um print aqui para o que eu confine,
e agora sim, Mike Reed sem espaço, olha, ou tem o alternativo também, aqui nos códigos ao Ripley's,
só que o Ripley se ele perde os farâmetros, então aqui a gente vai ter que passar os farâmetros,
disso vestuí o espaço, por nada, então quando a gente trabalha com estringes, é bem literal mesmo,
então aqui a gente tem que pensar não, não como espaço, eu fico pensar como,
desculpa, não como o espaço, mas como, desculpa não como a espaço anterior, ou depois, mas tudo literalmente vai ser
espaço, então aqui no meio também se tivesse um espaço ao inglês do um deline, ele apagaria,
então se aqui, por exemplo, tivesse o nome dessa forma, não seria legal fazer assim, que a gente substituiria
o espaço em braco do meio, e também, então o que a gente pode fazer, diferente do estrip, que ele pega
o que está antes e o que está depois, nesse caso aqui como está em derrline,
aí sim a gente pode substituir o espaço em branco, pelo, pelo dois pontos, né,
desculpa, pelas aspas, é aberto fechado, então aqui a gente está só substituindo esse
espaço em branco, por nada, basicamente, né, no fim das contas, então essa é uma forma também a gente apagar,
e agora o que vai ter o mesmo resultado, né, então a gente consegue aqui, de duas formas diferentes,
chegar ao mesmo resultado, agora passando pro próximo exercício,
agora ele pediu a gente fazer, olha, seguir, podemos dividir o ozerném, atualizar,
em duas substrinhas para obter uma lista que contém dois valores, o estring de paro nome
e estring de paro sobrenomo, então é isso, né, de que a gente pega o ozerném e dividem
em duas estringes diferentes, então vamos ver como é que está, os anêmicos, que beleza ele está,
já é dessa forma, né, e anda é, tem os espaços, então agora, como que a gente pode dividir,
uma alternativa aqui é o esplite, o que eu esplite ele vai dividir, e aí o que é não ter a gente passar o esplite,
nesse caso aqui ele não entendeu, mas qual é o, só, a estringa que a gente quer usar no esplite,
a gente vai usar o, um verlande, o que é que é, ó, a gente tá usando basicamente como você parado,
então a gente tem um micro-eit, a gente vai usar o separado, o underlande aqui,
então, aí sim, a gente consegue dividir numa lista com os dois, e agora a gente vai,
quando a gente faz isso, né, a gente tá realizando operação, mas a gente não é feito igual ainda,
então, sem te quiser, a gente tem que vir aqui,
o lista nome, o sublim nome, não sei, é isso, a gente efetiva,
é isso, então a gente que a gente precisa dividir os anêmicos, analisado em duas substringes
para ter uma lista que compende as valores, então aqui é essa vai ser nossa lista,
também a gente passa aqui o print,
a gente tem essa lista, e a gente consegue também acessar
para tu nome, quanto o sublim nome,
beleza, agora ele quer trabalhar com o variado useleis, como mencionamos,
antes ela possui um tipidaz em correto, se não é um corredil, esse problema é a
ima transformando o tipidaz em primeiro resultado final, ela aqui tá em correto,
porque ela tá como flote, né, então aqui bem simples vai ser só aplicar o
print, o useleis, é igual, o print useleis,
ou para aqui a gente não definiu ainda, a gente não roda, a gente não roda, ela se ela
almoa no começo,
quando a gente gootar aqui,
agora assim,
olha só, porque ela era um flote na ilita,
ela estava aqui com um valor decimal, quando a gente passa para
o empreiro ele passa para não manter,
então pensando assim, se fosse qualquer valor decimal,
aconteceria o mesmo,
e aí interessante,
aqui quando a gente aplicou a gente, ele não arredonda,
então essa é uma dúvida que pode aparecer, ele não arredondo,
ele sempre vai ser o número inteiro que começa,
então aqui é o 32, 85, a gente naturalmente arredivionaria para
33, mas nesse caso, quando a gente aplicou a gente,
não arredondo, ele pega o número inteiro que está associado
aquele, aquele valor decimal,
se a gente quisesse arredondar,
assim a gente teria que chamar a função ativa do paito
o ronde,
que o ronde,
naturalmente, quando tá arredondando, a gente já está falando
para a sua alma para não manter,
mas aqui como a gente está chamando o ronde,
a gente está colocando o número inteiro mais próximo,
então diferente no inch,
ele arredonda por no meio ter mais próximo,
então a gente pega sempre no meio inteiro ali pelo raiz,
é beleza, estaré facuados,
como salenhos do das, nem sempre são perfeitos,
temos consideracionais que o ozeorês não pode ser cobertido no
o meu inteiro, para evitar com a sistema de falha,
temos que tomar a medida de descontecinência,
tem um coge contento cobertira variável,
ozeorês, o meu nome é o interior,
o valor,
o valor transformado em ozeorês,
70 ativa falhar, vamos desbiromamente sai,
estando com o ozeorês,
com o valor no meio, com o com a mensagem,
com o forneço a sua idade, como o valor não é,
beleza, então é isso, ele quer tentar coberter,
em useris, que está no valor inteiro,
em valor float, para o valor inteiro, se não beca,
aí ele quer emitir a mensagem de erre,
então aqui é uma forma de ele já está querendo
porque a gente aprende uma coisa em novo, né, beleza,
vamos tentar jogar a useris,
em que ele quer que seja o inteiro de useris.
Se eu fazemos tomar medidas acontecendo,
então, ele está falando, pelo que eu entendi aqui,
ele está falando a gente tentar
o governo devre ter um valor inteiro,
então, é variável, ele está falando aqui,
a tribuir o valor transformado em o ozeorês,
então, nesse caso, a gente vai
criar uma extra, eu usaria uma extra-prichemada trai,
e o excepque aqui,
porque aqui a gente consegue tentar fazer a superação,
se dá errado, o que vai acontecer?
Ele vai emitir essa mensagem de erre na tela,
então, um desses pedaves, vou loiter, esse por isso,
eu entendo aqui, copiar,
por isso, isso, idade, como o valor testa no meio,
beleza, vamos lá,
então, escreve um código que tem que comer
ter a variável ozeorês, valor inteiro,
e a tribuir, se você ainda te vai
falar, vamos, beleza, então aqui, vai dar certo,
porque aqui, o euregia está como o valor inteiro,
não é? Na verdade, então, vou botar aqui de novo,
para a gente ficar,
o euregia está assim, vou tentar comer
ter o inteiro, vai dar certo,
porque, vamos botar aqui,
ó, e o euregia,
x,
então aqui vai dar certo,
o quê? Aqui, beleza, de flou de
pra índice, sempre dá certo,
mas isso, por acaso, a euregia está como
o flou de que, como o euregia,
a euregia, oupa,
não, nesse caso, não tem como
cobertês, stringy,
é para a valor inteiro,
então, a gente bota aqui, ó, foi,
isso, idade, como um valor no
mero, então, com esse caso aqui, como
está stringy,
não consegue, o pai, eu não fui
porta esse tipo de operação,
stringy, para a valor no mero, então,
que ele fala, aqui a gente tem
todo o fazê isso,
quando chegou aqui, de o euregia,
e o que ele faz é, em prime, essa
mensagem na tela,
então aqui ó, vou fazer, só essa parte
aqui, só que fora do fora da
essa estrutura traia que
sepxt, né?
Ele tá botar aqui embaixo,
e o euregia, vou tirar...
e vou botar no mesmo nível.
Aí, opa, envalido,
ele trave em vários, para a conversão
de íntice, isso aqui, um stringy,
ele não consegue o pai,
então, não consegue convertir,
naturalmente.
Existem formas de fazer isso,
depois a gente fala,
mas a gente vai falar mais
para frente, que somente,
como a gente entrar mais
empandas,
porque a gente tem jogar
esse aqui para um prodata frame,
a gente tem que aplicar
em umas tuturas, estão
dentro da freme,
e vai falar disso,
mas nesse caso, que usando o
pai tão nativo, ele não consegue.
Deixa eu saber aqui.
Beleza,
então,
próximo passo, tarefa 5,
ele falou aqui,
é observar que todos os categorias
favoritos são, mas é as redes, mas
os que elas vão preencher
uma nova leite, mas fábio
categorias low,
os mesmos categorias,
sim, no leitras minúsculas,
repitos valores,
na lista de fábio categorias.
Também, ele passou
a fábio categorias aqui,
não?
Vou puxar.
Também, beleza, fábio categorias,
oupa,
o tempo tão errado.
Então aqui,
vamos, pela lógica,
vamos escrever como sentivés
conversando com cor.
Coltar categorias,
vão categorias,
fábio categorias,
beleza?
Então aqui,
só para visualizar,
como que fica o botão print.
Então, beleza,
com aquele vai-letronics portbooks.
Então, beleza,
que eu quero fazer dentro de cada uma delas.
Então, o que ele faz?
Vai, chama o primeiro
objeto da lista,
eletronics rodo print.
Beleza, acabou o código,
vai para o próximo.
Chão primeiro,
o segundo,
o dia da lista,
post,
dá o print,
acabou,
vai para o próximo.
Ele vai dar o gol,
descapou o loop,
aí,
ele executa a célula todo.
Então aqui, dentro daqui,
o que a gente tem que fazer aqui,
é, lento do que a gente viu ali,
na primeira experiência.
E aí, eu vou jogar da magica,
né, que a gente,
aqui na verdade, ele falou,
que a gente tem que criar uma lista
em branca,
para armazenar né.
E agora eu quero calmer,
minha ajude,
como que a gente consegue,
dentro dessa lista,
aqui, da fala, ficar agora
slow,
jogar,
a conversão
do que tem aqui,
né, nas categorias e maiores.
Então, a gente tem alguns alternativos aqui,
mas,
inicialmente,
a gente tem que
chamar o apêndio,
mas,
isso aqui está faltando alguma coisa,
aqui está faltando aqui,
pessoal.
alguém me ajudou?
Não, alguém me uscou,
não,
oui?
Ele tem que passar para mim,
nos culto, mas,
tem que passar para mim,
nos,
vamos fazer isso.
O método do slow?
É o louer,
sei?
Vai de valor,
o louer.
Aí, como é a stringa,
a gente pode aplicar o louer,
então, lembrando, se fosse um número inteiro,
não faz sentido aplicar o louer,
ou um float,
porque ele tem propriedade de stringa,
então aqui nesse caso,
como é uma,
é uma,
hoje,
que tem bom predadinho,
não?
Então, o que como é um stringa,
como está aqui entre ascos,
a gente pode aplicar o louer.
E aí,
então, para categoria,
nas categorias favoritas,
a gente aplica aqui,
na factata agora eslou,
a gente chamou a penge,
então,
estamos usando duas coisas.
A gente está usando o método da lista,
que é o apende,
e o método da stringa,
que a gente está acessando,
via o loop,
que é o método louer aqui.
Então, a gente está usando o método louer,
por nosso,
para a nossa stringa está aqui dentro,
e o método apende,
dentro da nossa lista,
que a gente iniciou em branco.
E aí,
o que a gente vai fazer?
E aqui,
eu vou dar só uma,
essa exerna tela para ficar,
claro que a gente está fazendo.
Bom, a gente está saindo da categoria,
e a gente chega,
que é,
a categoria,
para categoria,
o louer,
porque é o novo.
E aí, a gente vai
me premiar essa mensagem na tela.
Opa,
a categoria louer,
a tá,
porque quem nesse caso a gente tem que armarzenar
numa variável,
então,
vamos fazer de outra forma aqui.
Vou estar aqui numa variável,
vou armarzenar ela numa variável,
e a variável,
que eu vou jogar
lá na lista.
Aqui,
a na verdade foi só porque eu não botei,
o abrir fechê o parentes,
então, eu poderia fazer.
É, aqui vai dar certo.
O que é, fão?
Mas é isso, né?
Então aqui,
eu saí,
eu amazené agora numa variável
cat louer,
aqui eu chamei de novo,
né,
metro,
mas aqui eu vou jogar da...
Então, o que ele faz?
Como ele ter o dia de electronics
mais oscuprominusco,
jogou dentro do
fave catagarizou.
E aqui, no final,
vou botar o prlicho,
fora do loupe,
para o meu fave catagarizou.
E aí,
sim,
agora,
sim, então a gente conseguiu passar
passo de passou um por um,
executou o metro do louer
e jogou lá dentro da nossa novelista.
Beleza,
mas um,
para conta aqui.
Então, vamos lá.
Agora, conseguindo
os informações de
os usuários,
subusados de consumo,
incluindo o valor agosto
em cada uma das suas categorias
superporitas.
Vamos escalar em prime
esse valor,
e um,
acho que...
eu peio dia
que os valores dessas...
Se eu não conseguir me ajudar
pessoal,
com algum constaque pegado
agora aqui no...
é, no da tripodém,
manda aqui no chat sol,
ou o dicionário,
aquele boto aqui.
Coa, acho que eu
eu acabei apagando
quando estava mexendo.
Enquanto isso, vamos fazer
aqui,
hoje, vamos dar uma olhada aqui,
não,
acho que aqui é o 8º,
conseguimos.
Ah, é o 8º,
bem tranquilo,
só,
ele só perde para a gente
criar o mistrime.
E aí,
basicamente,
vamos fazer a
estrime,
somando aqui
as diferentes estrimes.
As estrimes,
aqui, que tem duas listas,
a gente tem o uso,
né,
então, a gente tem aqui o uso,
é uma lista,
né,
a gente tem que pegar
aqui o nome inicial,
que é o primeiro nome,
e o nome,
eu sou o nome,
que é o segundo objeto
da lista.
Então,
dele,
aqui,
a gente vai
como há 20 hz.
Quanto vai criar dentro
de uso, né,
uso,
uso de uso,
vai ser
um estrime, né,
quer ser enriquecante,
quer imprimir.
E aí,
aqui,
que a gente pode fazer?
O usuário,
né, vamos escrever uma forma
que a gente consegue
mais ou menos criar uma
receitinha,
e aí,
onde a gente vai encaixar
as coisas.
Então,
a gente bota aqui,
o usuário,
e ali,
a gente vai botar
o uso de
o uso de
o botar chamas,
sim,
e aqui,
onde a gente vai botar
um nome de cara,
primeiro nome,
e tem
tanto os anos.
E agora,
aqui, o usuário de
ele tá
como estrime e a gente tem
tragar para não.
Só que tudo bem,
aqui como está como estrime,
ele vai encaixar a direitinha
em que dentro.
Se a gente botar
a nossa estreita,
né,
formatada.
E o Zenem vai ser
e o Zenem
só que como a
uma lista,
vai ter que acessar
o inciser.
E o Zenem,
ele consegue entrar aqui
tranquilo.
E olha só,
só que aqui o Zenem
não ficou legal, né?
Tem da agente que está bem
quebrada.
O que que eu posso fazer,
eu só venho aqui
dentro da minha do meu
prítima,
estava?
E aqui,
eu peguei no mistrime.
Formatada, né?
Então,
aqui eu tô jogando as minhas
variáveis.
Só que,
quando eu quero fazer
estrata metes simples,
vocês entendo
que às vezes,
é meio desperdício de um
alinhão,
chegar e botar.
Primeiro,
nome igual,
aí o Zenem,
o Zenem,
o Zenem,
e da gente,
igual,
e vem aqui no ítico,
o Zenem.
É muito mais dinâmico,
assim, pro código.
Eu cheguei a fazer
esses manipulações
direto lá no formatado,
e o resultado
é o mesmo.
Então, eu consigo,
dentro do grupo
e a gente formatado,
botar aqui dentro,
conseguir fazer
esses manipulações simples,
né?
Tipo, acessar um ítico de um alíista,
fazer essa conversão
aqui dentro do print formatado,
mesmo.
Então,
é,
esse é uma coisa muito legal.
Esse print formatado
não existe,
é muito tempo no pai,
com o fato de
o pessoal não engança,
tem a som,
5,4 anos,
antes disso,
não tinha um ponto.
Então,
antes disso,
você tinha que
vim realmente
criar uma variável
um apruno.
Então,
mais uma coisa que
quer linguagem vai avançando.
Então,
assim,
a linguagem é
ela viva,
ela vai avançando,
passa a pada.
E hoje ela está
muito mais pronta,
assim,
muito mais fácil de
dar gente conversar com ela também.
Então aqui a gente tem
o quadra vai quer,
trape com a ordem.
Ah, não,
para tranquilo junto.
Acho que
vamos avançando aqui,
depois a gente
a gente vê que
olha os aí,
depende de volta.
Se alguém tiver uma dúvida
na descrição também,
pode não dar
mais agora a gente já vai avançar
aqui,
valeu, obrigado.
E agora,
a gente tem aqui
os uns ciclo fora para
ir ter a sobre a lista de usuários.
Então aqui, beleza.
A gente tem uma lista,
que lembra que a gente falou
que a lista dação
bem flexíveis,
assim.
Então aqui,
a gente consegue ver.
A gente tem o
e o veradinho.
Então,
a gente tem aqui,
uma dentro da lista,
a gente tem uma segunda lista,
no segundo elemento,
a gente tem uma segunda lista,
tem um nome
e o sub nome da pessoa,
terceiro objeto da lista
a idade,
quatro objetos,
são os itens favoritos,
e aqui,
aqui,
então,
o objeto não sei,
são meianas,
é valor,
é valor isso.
Então,
vai logo a a gente tem cada categoria.
Então,
aqui, vai o lopreletrônio,
que vai o lopreestipós,
vai o lopreaboox por isso,
três, três.
E aqui,
eu finto a primeira subliste,
então,
aqui,
daqui a técnica,
é com o seu seu primeiro linha,
de uma tabela,
e aqui,
essa seria a segunda linha.
A Unius era a idade
da Kate Morgan,
é 331,
no Rio de Janeiro,
tem 24 anos,
as categorias dela,
aquela gasturação
é a essa aqui,
e o valor isso aqui,
são as aqui.
Então,
interessante também,
a gente vê que,
como flexível,
não sentido de aqui,
tem três elementos,
aqui,
tem dois,
então,
ela não quer o ano,
quase,
então,
eu consigo se lá botar 20 elementos aqui,
e pode ser que seja uma lista,
só de um elemento aqui.
Então,
beleza,
aqui,
nós vamos valoros,
e a gente quer,
entre mim,
aqui,
a receita.
Para a gente,
a receita,
como que a gente pode fazer.
Então, a gente tem aqui,
a nossa lista,
e usas,
a receita,
e aqui,
para a itera,
então, sobre a sublista,
se pensar no sentido de que cada lista,
cada,
fez sua,
vai ser uma linha da nossa lista,
então,
a gente vai ter que terar,
for o usuário,
o usas,
e aqui,
eu vou botar um cliente,
só para a gente ver,
e esse impressiona,
são um dia que eu posso passar para você,
sempre, porra,
escreveu um bode,
não tem um medo de usar o print,
sabe?
Eu falo,
eu falo,
eu falo,
eu falo,
eu vou pagar nada para usar,
pode usar o bota,
ali na tela,
eu vejo como é que fica,
vai ficar mais claro,
você consegue as vezes entender,
quando fica visualmente assim,
então,
vai lá e outro print,
só para a gente conferir como é que dá.
Então, beleza,
aqui,
vou deixar comentado,
que a gente ainda não criou,
a revenue,
né?
Quando a gente queria o outro.
Mas,
então,
é isso,
a gente passou aqui sobre as duas,
em essa no nosso,
da nossa lista do,
enfim,
passou o assunto da Tatha Fremor,
de 10,
12,
de uma pra cada um.
E aqui fica mais claro,
se a gente for ver a receita,
ela tá no,
em qual o elemento da nossa lista?
0,
lembrando que no pai,
então a elexação começa a usar,
né?
Então, que 0,
1,
2,
e outra dica,
você pare sempre pelo virro,
né?
Pra não confundir,
lembrem sempre do vivo,
e aqui,
claro,
a vígula de uma subilista,
não conta,
é sempre a vígula,
daquela,
da chave maior,
do cocheiro de maior,
de scoop.
Então,
aqui a gente tem
que 0,
1,
2,
3,
4,
ou até para aceleritar,
se podem fazer o contrário,
não é?
Mãe,
de que também?
Seu fú,
vei aqui,
o a receita,
ela é o ultima,
né?
Então,
trafa aceleritar,
eu não quero as vezes contar,
se o pôde assim,
a tem 30,
uma lista muito grande,
que tem 30,
ela é meio de não quero contar um por um,
pra saber qual carqueir ele em,
se mais eu vi que a receita é a ultima,
ou a penúltima.
Pão se o vinha aqui,
e botar o contrário.
Então,
se eu botar menos um,
o que ele faz,
ele começa a contar de trafa frente.
Então, às vezes,
esse velea,
dá para a frem muito grande,
e que tem justas
muitas colômas,
não se são tão interessadas na receita,
é que é a ultima.
Então, você vai aqui,
bota o menos um,
e aqui a gente consegue.
Então, nesse caso aqui,
só não ficar mais zo,
eu poderia usar, por exemplo,
é o 4, naquele vídeo,
mas eu vou usar o menos um,
que vai ser a última coluna.
Então aqui, beleza,
eu tenho o print,
o usuário menos um.
Então aqui, eu peguei a receita de cada uma
das nossas duas linhas.
O que eu faço agora?
Eu vi, vejo que é uma lista,
mas é uma lista com 3 elementos,
que eu devo somar,
para chegar no nosso receito total.
Então,
eu vou vim aqui,
e vou lembrar o que
a gente pode aplicar a função nativa do paito,
um sangue que ela vai somar,
é usulamente da serista.
Eu estou faltando que o parentes
e aí, agora sim,
agora a gente somou dentro de cada lista,
de cada linha,
1.500 para 1.300 para 2.000.
E aí, se que a gente vê aqui,
1.500,
1.500,
100.200, 300.
Mas está faltando alguma coisa que é,
consolidado
na variável revenue.
Como que a gente pode fazer isso?
Aí eu vou iniciar
eles aqui, um zero,
e agora,
o que a gente tem que fazer aqui, pessoal?
A gente já me ajuda isso,
e no que você vai falar,
só eu vou na no chat,
mas vamos a pra exercitar,
que a gente tem que fazer
para consolidar
e fazer o que a gente precisa de
20 de sete.
O que agora é só deu o print,
ou vai dar errado?
Pode ser humano,
não vale nada, né?
Exatamente,
boa danil.
Aí, sei,
aqui, a gente vai ajudar o print,
o print já está aqui embaixo,
né?
Então, não faz sentido que eu
ficar em primeiro número por um.
Vou botar aqui o revenue,
mas, igual.
E agora,
sim,
agora sim,
porque a gente está consolidando,
bem entradar a nossa variável revenue,
que a gente iniciou aqui.
E aí,
agora,
agora eu,
outra coisa,
a gente tem que deixar a zerado,
porque, se não,
ela vai acumulando aqui,
toda vez que o robeia,
ela vai aumentando.
Então, peça numa situação
que a gente está criando uma função,
por isso que a gente deve,
sempre botar ela aqui para iniciar
a lesar com o zero,
para que toda vez que ela começa a rodar,
ela começa a ir para a luz zero,
e aí, faça essa soma que ia acumulado.
E aí, sim, beleza,
181, que eu consegui me chegar,
na receita,
todo.
Aí, sei, total bem presa, né?
Agora, ele aumentou um pouquinho,
contexto mais real assim,
e pegou essas duas aqui no print.
E duas linhas,
e agora ele aumentou para,
sei, aqui, uns 10.
E é isso que a gente vai aumentando
aqui a complexidade, né?
Mas, a mesma estrutura,
e der nome da pessoa,
e é assim, parece a estadora
ver se está de nada aqui no molhista,
mas, cara, é uma receita de bol.
Então, aqui é o primeiro aqui,
primeiro o objeto e desse,
segundo o objeto,
uma lista com o nome,
terceiro objeto,
e dá de quarto o objeto,
uma lista com as categorias,
que então o objeto,
uma lista com o valor gasto em cada categoria.
E aí, viva um partido ao próximo.
Não tem muito segreda assim, né?
E a gente não tem que ser de bol.
Agora, ele pediu um for,
então assim, o for ele não vai ficar mais complexos
que tiver mais valores na,
na calista,
porque é a receita de bol.
E agora ele quer,
o primeiro,
os nomes dos clientes com menos 30 anos.
Então, beleza,
uma adinou,
o for,
aqui ele botou o ozer, né?
For, o usuário.
O linhas de novo,
o grito de grasa,
vamos só ver como é que está.
Agora, beleza,
ele falou da idade,
cê menos 30 anos.
E aqui é a idade,
a gente já sabe de cara que é o 0,
o 1,
2.
Como eu faço com a pegacumência,
então,
aí a gente já viu bastante que é o
if.
Então aqui,
posso fazer,
o que eu tenho que fazer?
Primeiro,
acessar o usuário,
o gruta aqui,
que a gente quer pegar as idades,
né?
Então,
a gente quer pegar as idades,
a gente vai no 0,
um 2,
20 usuários.
Olha aqui.
Agora, eu imprimi todas as idades,
que eu estou passando
e ter andalindo dentro daquele loop,
dentro daquela,
da nossa lista,
e eu estou pegando sempre.
Tracado usuário,
eu estou pegando o segundo
elemento da lista,
que é isso,
é o idade.
Então, o que eu vou fazer?
Ao invés de dar o print,
eu não quero pintar, né?
Porque eu quero que a minha fuma,
meu cojo,
ele,
filtre,
quem tem menos 30 anos.
Então, botar aqui um if,
um usuário,
menos 30.
Aí de novo,
agora eu vou dar um print
para ver quem que vem agora.
Ou,
pah,
agora sim.
Olha,
veio só galera que realmente
tem menos 30 anos.
E aqui, porque aqui veio tudo,
porque aqui embaixo,
no print de baixo,
não vou ter a indexação.
Isso eu vou estar a indexação,
que é o 2,
agora sim,
os idades do pessoal.
Beleza,
cria,
é um geral racional.
Agora,
ele quer pegar
em primeiro nome de
clientes que tem menos 30 anos.
Então é o nome,
imagínio seja o primeiro nome,
então aqui,
quem vai fazer,
quem é o primeiroidade?
A gente fobou o tal um,
a gente vai primeiro,
o que?
A lista.
Mas,
o que eu quero fazer?
Aqui que eu me primeiroim,
então, uma lista.
Só que eu não quero um nome completo.
Eu quero só o primeiro nome,
o que eu faço aqui de novo?
Eu vou passar.
Então,
o Zaryn,
eu acessei o segundo índice.
Acessei aqui,
primeiro,
aqui,
e depois,
aqui.
Então,
os temem de,
quem vai ali,
entrando dentro das gavetas,
a gente chama e aí,
beleza,
conseguia acessar aqui o nome,
e o primeiro aqui,
de fato,
quem tem menos 30 anos.
Isso é o que quiser,
da uma,
uma enfaitada,
eu posso fazer aqui,
então, o print foi matado.
Eu vou estar aqui,
o Zaryn,
um Zaryn,
tem,
e aqui,
o Zaryn,
dois.
Tantos.
Agora, assim, né?
Beleza.
E agora,
o juntar as tarefas novidas,
em primeiros horas com 30 anos,
e com o gasto total,
é assim,
de mil dólares, né?
Eu acho que aqui já está fácil,
então, vamos lá,
vamos só copiar,
ou os Zaryn usas,
só que é aí,
vamos voltar aqui na cima,
qualquer,
o filtro eleira no,
os Zaryn menos 1,
vamos voltar aqui,
os Zaryn menos 1,
e branca o 4,
até o uso.
Então,
aqui,
beleza,
e fiz o ar menor,
que é 30.
Em x,
são o usuário,
menos 1,
que é a soma daquela última lista,
maior do que 1,
eu vou dar um printículo usuário
completa,
só pra gente conferir isso e ver se está certo.
Olha aqui,
beleza?
O Sam,
a Samantha e James dos dois tem menos 30 anos,
e aqui,
de fato,
300,
mais 600,
e 80,
e liga da já foi para
para 900,
e 80,
isso é um mô aqui,
passou dos mil.
Aqui é a mesma coisa,
300,
com quem ele se atentem nove,
já passou dos mil também.
Então,
de fato, esse pessoal foro,
foi esse pessoal,
que é a tendia de as duas características,
que a gente botou aqui.
Então,
a idade,
que é o que mige do Pro aqui,
usuário,
é em x2,
ele é menor do que 30.
E a soma,
do usuário,
menos 1,
que é a nossa última
última elemento,
que é a celista aqui.
Ela é,
essa aqui,
então,
a soma isso aqui,
isso aqui é maior do que
meu.
Lembrando de novo,
porque tanto faz a gente botar
menos 1,
o botar o índice,
que, nesse caso,
o que a gente está acessando,
quando a gente vai aborta o menos,
a gente está acessando,
de trás para frente.
E agora,
ele falou,
para em primeiro nome,
a idade,
todos os usuários
calvaram roupas,
em prime
provos,
em prime,
nome a idade,
na mesma expressão,
de...
de impressão,
beleza.
Então,
ele pediu dessa forma aqui,
nome idade.
Ou os usuários,
é agora também tranquilo,
na gente já fez coisa
mais complexa aqui.
Foros usuários,
uses,
de o...
print,
é o que eu vou dar,
querer,
o que que ele pediu,
que todos os usuários
que compraram close,
então,
agora eu vou querer,
ó,
a...
vou dar o print novo,
usar o print,
para verificar
qual que é,
essa aqui,
é o zero
um,
um,
dois,
três,
print,
um usuário.
Cres,
beleza.
É o perbe,
sim,
é...
tem,
qual que ele quer ver?
Clufus,
ele quer ver quem comprou Clufus.
E a gente pode fazer
do meu formo,
bem simples.
E,
Clufus,
e...
e aí,
usuário 3.
Agora,
a gente vai dar o print aqui
de novo,
para ver.
Quem quer?
Olha aqui.
E, vai pintar o usuário completo.
Olha aqui Clufus,
Clufus, Clufus, Clufus,
também dependente
estar no primeiro elemento no último.
É a galera aqui realmente comprou Clufus.
E aí, o que que ele pediu?
O print meu nome é a idade.
Então aqui,
eu vou o print meu nome,
que é o usuário.
É...
um...
zero.
Vamos fazer daquela mesma forma que a gente fez ele no outro.
Vem de formato.
Aí, eu posso só selecionar o dia
bota aqui no teclado,
as pessoas ele pegam tudo.
Então aqui, o print foi matado.
E aí,
se enchamos
as chaves aqui.
Pente o usuário 1, zero.
Aí, aqui, vai imprimir o nome.
Vou voltar aqui o nome, né?
Antes, fora do colcheite,
o nome, o usuário.
Vigo,
a idade.
E dade.
E a idade vai ser qual?
Vai ser o...
zero.
Um... dois.
Então, beleza, eu venho que o usuário
o usuário
dois.
Bom, beleza.
Então aqui, a gente tá...
preconfigurando dentro da string, né?
Então, a gente foi viu
que na indecção 3,
quem tinha gloves
e quem tinha,
a gente foi deu nosso print formato.
Acesando aqui
o nome,
e o primeiro nome,
o nome, o nome, o nome da pessoa.
E a idade, que tá aqui, na segunda chave.
Então, é isso, pessoal.
A gente fez aqui rapidinho.
É menos melhorinha, né?
Tico que se guimar, tá.
A primeira lista.
Então, acho que deu para criar uma lógica,
acho que é legal a gente fazer,
a gente, que eu sim, que a gente
consegue ver,
passa a passe.
E o mandíque que eu tenho para vocês,
acho que fazendo aqui é...
Não, não tenho um medo de
consistão desenvolvendo de...
fazer tais.
Então, às vezes, a gente acaba
se prendendo muito a poxa de oeir,
o que eu faço, claro?
Sim, meu Deus, eu tenho que fazer isso.
Tem que fazer aquilo.
Aqui, uso o print,
volta um passo, do que você tá mexendo.
Se você tá dando o erro naquele objeto,
vai lá, tem até o ver,
o que tá errado no objeto.
Tem, enfim,
o uso em bastante o print,
é sua favor.
Vocês conseguem, com ele,
ver aqui na tela,
devugar esse...
esse jogo em processo de devugar.
E na programação, olha,
é muito normal.
É coisa mais normal do mundo,
com a gente tem o evo,
tal, alguns passos,
fazer o passapaste,
e tá vendo o estado e o...
e chegar numa solução final.
Então, no final, o print se vai lá,
apaga, ninguém vai ver.
Vai ficar só pra você.
E enfim, não tem que ter vinguende
de botal de na tela,
o ver o que tá acontecendo,
fazer passapaste,
é a usem essa favor também.
E agora,
beleza, agora eu vou mudar aqui de tela.
Vamos finalmente começar
a conteúdo da experimenta 2.
Eu vou só compartilhar aqui.
Trocato.
Acho que vocês estão vendo, não?
Beleza?
Agora, assim, a gente vai começar
a experimenta 2.
Hoje a gente vai falar
de novo naquela linha de...
Hoje a gente vai falar mais sobre a teoria.
Vamos trazer alguns exemplos também,
mas na quarta gente vai trazer
começar a trazer as aplicações
para tráxicas.
Então, o objetivo de hoje
é que para hoje,
a gente vai conhecer estruturas
de dicionários e as propriedades
delas.
A gente vai entender o que são
funções,
as sintaxis de funções no pátil
e como os a elas.
Tivem a diferença,
a variáveis locais de variáveis
globais e funções.
Parece assim a complexo,
variável local,
variável global,
mas a gente vai ver que não é nada
complexo.
E, por fim,
vai discutir sobre as boas
práticas ao trabalhar
que funções.
Então, um lado um pouquinho
mais técnico ali,
mas é aprofundado, mas
eu vou passar uma visão de
vocês que é algo que é bom
alegar o seu estere
quando vocês estão começando
a trabalhar com funções agora
porque se vocês tiverem
esses hábitos assim
começando.
Agora, vocês vão ter
um bom hábito para vida inteira.
Então, é muito bom
começar a fazer a forma certa,
saber como fazer a forma certa,
vocês vão ser diferenciado
para frente.
Porque é grande maioria das pessoas
acabam que não faz.
E, enfim, o conta de
correria, de pressão.
Mas, se vocês conseguem
se vocês estão a fazer a
função ali, por exemplo,
completamente
é ter tudo descrito bonitinho
que ela faz e, nesse sentido,
seja consegue se destacar
em ter um dia,
a escrita mesmo em seu código,
né?
De outras pessoas conseguem
pegar ali,
entender o que você está fazendo.
Então, beleza.
Primeiro, falar que
dos cenários,
eles são estrutura de dados
para a marzinha paris de
chave valor.
Eles são mutáveis.
Então, eles são muito
úteis para acessar
informação rápidamente,
de novo também,
não tem limitação
em termos do que a gente pode
acessar a condicionários.
A gente pode armarzenar
como stringa, a gente pode
armarzenar como no
monitor, ao outro pode ser stringa
também.
E a gente consegue,
é, a única obrigação
que a gente tem no funcionário,
deixa eu apagar aqui.
É, a única obrigação que a
gente tem no funcionário,
é em questão
de das chaves.
As chaves sim,
elas devem ser únicas
e mutáveis.
Então, se uma chave
ela estringa,
todos a chaves devem ser stringa.
Se uma chave é número,
todos a chave são
números.
Se uma chave é
túpula,
todos a chave são túpulos.
Enquanto é igual,
a gente falou os valores
eles podem ser de
qualquer tipo.
Então aqui,
a gente vê
todos a chave são strings.
Se a gente for ver
também os valores,
não, os valores a gente tem.
Aqui a gente tem
uma stringa,
um inteiro,
outra stringa,
uma lista,
outra lista.
E passando agora a proposta.
A gente consegue
extrair os valores
nos nossos funcionários
com alguns méticos.
Então, lembra que a gente aplicou
o LOW e lá a pra lista.
A lista ela tem aquelas propriedades.
A gente também,
ou desculpa, a gente aprecomo
eu vou para estringir.
Então,
os juntos,
em que a situação
é interessante
ter uma chave túpula.
Por exemplo,
você tem pensar
assim,
cara,
não se estivesse
do um graf,
que tem um valor
x e o valor
y.
Você tem um ponto.
E você quer
triboir aquele ponto
uma característica
para a gente com uma
cor.
Você quer pegar
o ponto
do xx
x igual 1
e o sinogado 1.
Você pode passar
numa túpula,
por exemplo,
x vão igual 2.
E aí,
no valor,
você pode passar
a cor, por exemplo,
hedge.
E aí,
por ponto 2,
3,
você pode passar a cor,
do...
Então,
assim,
não se tive
porque o de ser precisy
tem alguma referência
para a chave,
que não
que pode ser passado
numa fonte tupona.
É mais raro
ali,
mas tem alguns
apricações,
pode ser que apareça.
Também coordenadas
geográfico,
ali,
lá,
que o de longe do hoje.
Então,
tem alguns caractrics.
Mas,
da grande maioria das vezes,
realmente,
você
achar os uns
ser
estringes.
Algumas vezes,
elas vão ser
valores em terço.
E beleza,
que a gente pode acessar,
tem alguns métrios,
na igual a gente falou,
tem alguns métodos
que são só para listas,
alguns métodos que são só
pressem,
e alguns métodos que são
preticionários.
Aqui a gente tem o que
a gente tem
o velho,
aqui,
que a gente acessa.
Só as chaves,
né,
do nosso funcionário,
pra gente acessar só aqui,
velho,
a gente acessa
só os valores.
E tem a
a gente acessa
a combinação dos dois.
Chave,
e valor,
chave valor,
chave valor,
chave valor.
Beleza,
próximo.
Aqui, agora,
a gente como a
espogia adicionar,
o removão
em deducionar,
é tradicional,
carna,
não tem muito segredo,
só pegar aqui,
é,
e criar,
dessa forma,
se a gente bem
atribui
uma nova chave,
nome que a gente quiser,
deixa eu voltar aqui,
fico ruim.
E a gente pode
criar,
da forma que a gente quiser,
também,
a gente quiser passar um estringue,
a gente passa,
a gente só boto igual,
e igual a gente usa
para atribuir,
e ela já vai direto
para cá,
então,
quando a gente boto direto,
ela já vai
para o nosso funcionário.
Pra remover,
a gente pode usar
alguns outros metos,
como deu,
que é um nativo do Python,
ou pop,
o pop ele é quando a gente
aplica direta,
e aqui,
a gente teria que
vir aqui,
e aplicar o pop.
Então,
é um alternativo também,
mas aqui a gente usou o deu,
que vem aqui,
deu,
e chama a chave que a gente quer dele tá.
Então aqui,
a chave e daagefiles,
ela não foi pra cá,
e a gente já disse o nome a nova chave,
porque é isso aqui,
da abaixado.
Beleza,
próximo passo,
aqui,
já aprofundando um pouco,
e fazendo uma suciação,
vamos conhecer vocês vão ver
muito na carreira de dados de vocês,
então é bom,
já apresentado aí,
agora,
que é o Jason,
o Jason,
ele é um formato de
armazenamento de dados,
então,
ele é a tradução dele,
de JavaScript,
JavaScript,
object notation,
ele é a forma
que os objetos do JavaScript são inscritos,
mas,
por ser uma forma muito intuitiva,
acabou que se expandiu
pra todos os linguais,
programação,
e virou meio que o formato,
então,
ali, você tem o CSV,
que é separado por vígula,
você tem o Excel,
que a gente consegue jogar
uma polilha de Excel,
você tem o ponto PBEX,
que é o modelo de dados do
planar VIP,
e aqui no caso,
você tem, por exemplo, Jason,
que ele é um formato,
ele é muito usado em a país,
armazenamento de transveições
de formações de existência,
então, por exemplo,
toda vez você vai lá no aplicativo,
de faz um cadastro,
o que ele cara faz,
ele vai armazenar os seus dados,
provavelmente no objeto de Jason,
e o que é um objeto de Jason?
Ele não é mais é adiconticionário,
exatamente no que a gente viu aqui,
chave valor,
só que a única,
é um que a gente se gêneça dele,
é a chave,
se tem que vai ser stringo.
Então, diferente do que a gente viu ali,
que pode ocorrer um caso roto,
então, no primeiro inteiro,
ou no número,
é um atupo,
aqui na maioria,
ele sempre vai ser stringo,
ele é o que o scopreau
brigado a ser stringo,
então, que é o que a gente vê,
tem aqui, por exemplo,
um candidato ou uma pessoa,
que tem que dar a agisidade,
se tem filho,
que você tem filho aqui,
é um boleano,
verdadeiro falso,
aqui é o stringo,
no maior que o minteiro,
o stringo,
e aqui os chítulos,
ele é um engeiro e um programa do
então aqui,
uma lista.
Então, Jason,
ele é muito usado
para armazenar
dados
nessa forma,
então, ele é um formato texto,
e ele é basicamente
mais estrutura de dicionar,
né,
que a gente se enchever,
não tem muito segredo,
e ele é muito usado também para a país,
porque ele é muito leve,
então, diferente de outros formados
que acabam ficando muito pesadas,
porque tem ele,
é muito escaracterístico,
Jason,
é simplesmente uns dados,
na forma de uma,
o que vai pesar aqui,
são os caractérios,
então não tem muito segredo,
e o que ele,
ele acaba por ele ver ser muito leve,
ele acaba ser muito fácil de acessar.
Então, eu vou trazer aqui um exemplo,
de uma precaução que eu estou usando Jason,
então, visualmente,
ele fica muito claro também.
Então, é os,
eu use a aplicação aqui de Jason Crack,
que é lá para o VSCCog,
que é que a gente consegue pegar um funcionário,
isso aqui é um projeto real, pessoal,
que eu estou fazendo,
para fazer um árvores decisão,
isso aqui são caractérísticas de uma árvores decisão, né?
Então, aqui eu tenho,
então, não vai entrar no detalhe,
mas lá para a frente de 16am trecho de uma árvores decisão,
mas aqui são basicamente colunas,
de lembra muito mais comentáveis,
altamente.
E é isso aqui é um diazão,
não fim das condições de a izão,
mas quando eu vejo ali,
só o texto,
eu estava ficando muito feio, né?
Eu tevei esses frins,
três, três, três, três, três,
e aqui, quando eu vejo,
eu já consigo ver visualmente.
Então, o que é o PFF?
O PFF é nada mais,
é de que uma chave,
daqui,
mas o que ele tem nessa chave,
só esse valor.
Eu tenho aqui o Clés Counts Trém,
que tem uma lista dentro dela,
que tem nessa lista,
tem o zero,
no outro tipo,
tem o novo de seu nardo dentro dela,
e aí,
aqui, ao outro seu nardo,
tem o chave zero,
o valor um chave zero,
já viu um valor zero,
de escopo,
já viu 22,
já fizeram 677,
e agora,
aqui, para até este, por exemplo,
tem chave zero,
os N506,
valores,
já viu um,
catorze valores.
E aqui,
como é só aninhar,
a minha no sentido de criar
uma estrutura de filhos,
ele vem aqui,
ele tem uma chave dentro,
desse que é basicar um de primeiro nível,
da avos de edição,
que é o filho,
e o filho,
é basicamente,
o segundo nível da avos de decisão,
que aí eu consigo expandir,
e aí,
o que tem dentro do filho,
as mesmas coisas que tem dentro do pai,
se for ver aqui,
as mesmas coisas,
ele tem um caminho,
que é o caminho dele,
então ele sai daqui,
vai para cá,
e aqui ele tem também,
as contagens,
zero, um,
zero, um,
então ele consegue,
ele vai repetindo
numa estrutura de dissonários,
dentro de dissonários,
dentro de dissonários,
e o chalde,
na verdade,
é um segundo dissonário,
desculpo de chalde,
é uma lista,
e o clé está com a antisteste,
é um dissonário.
Não,
é o que é um novo dissonário,
desculpo de dissonário,
dentro de dissonário.
Então,
a gente consegue jogar,
uma estrutura de filhos,
né?
Então,
a gente tem um pai,
tem vários filhos.
Então,
quando for entrar,
trabalhar com os sonários,
essa também é uma aplicação muito legal,
de dissonrocrack,
ele não pega ali,
se eu não me ganei,
não pega os sonários nativos do pai,
com,
mas tem uma funçãozinho,
para converter de pai,
então,
para a dissonão,
é praticamente igual,
vocês podem ver como
a colher de pai,
para a dissonro,
vocês conseguem,
vem também,
qualquer de sonário,
dessa forma,
aqui,
fica muito mais visual,
é uma pânmeia,
mas o mental,
realmente,
então,
até pensar para apresentar
para alguém,
se chegar a demonstrar
a dissonro de um resultado,
quando você mostra,
só o texto,
povo,
como é muito feio,
mas você mostrar isso aqui,
seja dar,
por outra visão,
ali,
isso é o que o trabalho você está fazendo.
Esse organização tem a ver,
como formar a dissonro de um
formo aqui,
mas,
exatamente,
o formo aqui,
dá para partir,
é,
desde esse presuposto,
também,
e o formo aqui,
o que,
o que a gente fala
em cima do formo aqui,
é que você está fazendo
um união,
aqui,
você não está fazendo um união,
de provisualmente,
a intenção é a mesma,
mostrar relações,
mas aqui,
a relação,
é,
ela não vai ser,
de um produto,
ela vai ser que um
o teálge aqui,
por exemplo,
está dentro do outro,
então,
a gente,
de cruzar,
igual você faz no formo aqui,
pega aonde,
que uma chave está aí,
está dentro de uma chave primária,
ali,
é,
de motor tabela,
aqui,
num caso,
não tem relação,
é,
só,
uma relação de,
pai para filho,
olha,
como se fosse a gente está
procurando um dentro do outro,
mas é,
a lógica,
não fim a mesma.
E,
agora aqui,
para a gente acabar do cenário,
é,
como que o Harry Potter,
quando você tem,
está acessar uma chave,
que não existe no cenário,
então,
quando você tem,
está acessar uma chave,
que não existe,
vai pegar ali,
a mensagem do erro,
se eu quiser aqui no peço,
é,
acessar aqui uma,
sei lá,
crédit card,
não vai ter,
vou pegar a mensagem de
eu,
a gente tem que pegar,
alguma coisa que existe.
E,
é,
isso aqui o cara que ainda
dá pra lembrar que ele
é o Harry Potter.
E,
agora,
funções empairtas,
esse aqui é,
é muito bom também,
quem gosta de Deus,
é,
acho que,
quem não gosta,
porque ainda não viu,
porque as melhores séries
da história,
e aqui a gente tem,
vamos começar a falar de funções,
as sonhas se boycos de cor,
que são eu te visáveis,
que executam uma tarefa específica,
elas ajudam a organizar,
reduzir a repetição no código.
Então aqui a gente tem um meme,
muito bom,
esse que é o Michael,
é o personagem principal,
do Deus,
e aqui o chef dele
está parabilizando ele,
é,
seu algoritmo de Python é
muito efficiente,
e aqui ele está definindo
uma função,
só que a função dele,
que ela faz,
ele pega uma lista e chama
o sorte nativo do Python,
ou seja,
ele só retorna basicamente,
e a mesma coisa que o Python faz,
ele não faz nada.
Então,
essa é a piada que o chef
parabénizando ele,
por não fazer nada,
e agora,
falando sério,
é se assim taks das funções,
e agora a gente viu ali,
é assim taks,
já fiz uma função que sonha
tornada no extremo,
é,
acontece.
E aqui a gente está,
o retorne opcional,
e o a gente falou,
o retorne ele,
a gente não precisa retorna nada,
mas que acontece.
A gente precisa ter,
com a função retorne,
então aqui,
de obrigator a gente tem um def,
que é a palavra dedicada
ali para definir a função,
com a gente chamando def,
a gente começa a botar um nome
da função,
com a gente abre,
o parentes,
a gente bota os paranos da
carafunção,
desculpa,
aqui eu não esqueço de mencionar,
os paranos também não
essa é a mente sobre gatorre,
tá?
Os podem ser,
os demais aqui,
não,
o retorne e os paranos também,
porque aqui os paranos de uma
função não necessariamente
precisa ter paranos,
eles podem ser em branco,
eu posso fazer,
por exemplo,
uma operação aqui dentro,
eu posso deixar aqui,
nenhum parano e trope
posso botar,
print,
meu nome é Bruno,
e ele vai ter nenhum
nenhum parano,
muito mais ele vai dar o print,
só do que estiver dentro,
mas,
aqui são os paranos,
e trouxe que a gente pode passar,
ou dentro do blogo
aqui, intermediário,
ou direto no retorne,
o retorne,
ele não é mais é,
porque o que a gente quer,
é que a função traga,
e aqui no caso,
a gente bota um som,
uma simpidais,
e a gente armazendo
o nosso retorno,
uma nova variável chamada
resultado,
e é nela que a gente dá o print,
mas não necessariamente
precisa do retorne,
eu vou falar aqui,
a gente pode
definir a função soma
a e 2,
que é o que qual faz?
Ela vai dar o print,
a gente retorna,
ela vai dar o print,
aqui eu estou armazenando,
não variava em tender de área,
e dando print nessa variável,
tender de área.
Então no fim,
que era meu objetivo ali,
o primeiro que insina até o,
o que eu,
aqui, os aí 2,
a gente pode,
não variava em tender de área,
e aí no fim,
eu estou achando o print
para que ela variava em tender de área.
Aqui,
eu estou definindo
na função direto,
eu estou dando print,
já,
no parão,
eu vou desfazer naquela pressão.
Mas simpizando,
então,
é aqui,
eu posso retorronar
um parão,
então não,
quando foi o conveniente,
para mim.
É,
mais assim taxés,
aqui,
dando uma reforçada na sintaxe,
então,
que a gente tem o def,
palavra chada,
vdf,
nome da função,
os paramentos,
os paramentos,
pode ser igual,
e isso pode funcionar,
pode ser um número inteiro,
com o modo de retorno,
é esse aqui,
que a gente chama,
quando a gente quer um retorno,
e o valor que vai dentro daquele retorno.
Então, o valor pode levar
tudo o que está aqui dentro,
e o que está aqui dentro,
nada mais é,
do que as variáveis
e o que a gente vai
trabalhar com elas,
tratamento que a gente vai fazer nela.
E,
é isso.
Temos que variáveis locais,
e variáveis gobais.
As variáveis locais são definidas,
só dentro da função.
Então, que é só dentro da função.
E é só poder ser acessadas,
dentro da função.
Então, que é, eu estou definindo
a função de saudação,
que eu estou botando aqui nome,
igual a bruno.
Eu venho,
vou dar um retorno,
daqui de novo formatado,
e aqui eu botou um stringo
lá, nome,
aqui vem do bruno,
mas interessante,
como está o bruno,
que está uma variável intermediária,
aqui dentro da minha definição
da função,
por isso que ela local,
que ela não está no meio
na minha nimpe espaldeco hoje,
vocês observarem o que está na minha nimpe
nimpe espaldeco hoje,
vou pagar aqui,
ficar mais para o lado.
É o defe.
Então,
vocês podem marcar isso,
pelo pressa de nimpe,
ela é nimpe espaldeco hoje.
Então, aqui quando ela tem um,
e enjica aqui,
ela está no primeiro nível,
e o que está para a direita,
está identável,
chama,
identação,
que vai aqui pro lado.
Então, aqui é o defe de minha função,
só o dação,
estou botando o nome,
igual a bruno,
e aqui eu chamei o no retorno,
eu posso chamar o nome,
porque o nome está dentro
desse meu bloco,
aqui, de código,
opa.
E aqui quando eu dou o print,
aí sim eu consigo,
porque é a função,
aqui aqui,
eu vou dizer,
não é um função que não tem nenhum,
nenhum parâmetro,
só estar retornando,
porque a gente botou
que na barilha vem tem mediário,
e retornando que tem dela.
Aqui agora,
o que eu estou fazendo?
Olha aqui,
como o nome,
ele não está
nesse segundo nível de código.
Ele está no nível principal,
aqui,
o mesmo nível do...
opa.
Agora sim,
ele está no mesmo nível,
da função.
Então,
aqui a gente vê que é uma variava global.
E agora sim,
eu não preciso nem chamar o bruno,
dentro da minha função,
porque ele já é uma variava global,
quando eu bota aqui o retorno,
ou lá,
bruno,
da tudo certo,
porque ele vai lembrar o código,
vai lembrar,
e pode ser acessada por todo código.
Então aqui o bruno
qualquer momento que eu chamar o logo,
o código,
ele vai puxar e vai associar,
porque vai ser a minha variava global.
Próximo passa,
argumentos padrões e funções,
os argumentos padrões,
que a gente chama de defrou,
eles podem estar da parão,
que ele pode ter um valor padrão.
E ele pode ser usado,
ou não,
quando a gente for,
esse... aquele valor para chamar a função.
Então assim,
é opcional.
Esse aqui não é obrigatório
quando eu passo a parão,
mas eu posso passar qualquer valor padrão,
daquele paramento.
Então aqui,
eu estou definindo agora esta audação,
eu estou botando o nome
da pessoa,
como você é o dar.
E o tipo de saudação,
eu vou colocar que eu tipo padrão,
como segular.
Mas o que acontece?
Se eu não botar,
ele ainda é um opção,
aqui é o mesmo caso,
eu não botei o tipo,
deixei ou meti,
deixei em branco.
Então o que ele vai fazer?
Aí ele vai botar o padrão.
Beleza,
e ele não vai dar aí,
porque ele já tem um padrão definido.
Se ele não tiver esse padrão definido aqui,
ele vai falar,
não,
faltou a variava em o tipo.
Então, nesse caso,
o que a gente vai fazer agora,
mas também,
novamente, ele é um padrão.
Ele não é obrigatório que você seja aqui o olá.
Eu posso passar aqui nesse segundo exemplo.
O,
aqui eu estou chamando o Pedro,
então meu primeiro paramento vai ser o Pedro,
que é o nome,
então aqui passando o Pedro por nome.
E o segundo agora,
assim, onde?
A gente,
o que é Maria,
aqui eu deixei o padrão,
eu vou chamar o tipo.
Eu não quero que seja o olá,
eu quero que seja bom dia.
Eu vou chamar bom dia,
e aí,
vou mandar aqui o Pedro.
Vou chamar,
mandar pro Pedro,
bom dia,
e ele,
o que vai fazer?
Bom dia vai sobre a escrever,
ou lá.
E aí,
dá certo.
Bom dia, Pedro,
ou lá,
Maria,
sempre que o Maria,
aqui,
no botem,
nem um argumento padrão,
na função.
E aqui,
no segundo,
eu botei o argumento padrão no bom dia.
Eu botei o argumento bom dia,
e aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí,
aí, agora,
para fechar,
vamos começar a entrar agora na parte de
documentação.
É uma coisa muito interessante,
isso aqui já é mais avançado,
mas é uma boa prática
que vale a pena acordar
desde os meus projetos,
que eu fazer uso das docs trins.
As docs trins são esses,
são três,
três áscos que a gente bota
aqui,
nessa forma,
né?
Assim,
e nesse meio que a gente
bota a documentação do colho.
Então, a gente consegue
dessa forma,
que acontece.
Ele fica aqui a esse string, né?
nessa forma.
E a boa prática é botar primeiro
o que a função faz.
Depois os parâmetros
e, por fim,
o que retorram,
né?
E que também,
interessante também,
é dentro dos parâmetros de botar.
O que que são os parâmetros,
interou o floute,
interou o floute,
interou o floute,
então que a gente está fazendo a função de soma,
que vai pegar dois números,
um deles ou o floute,
e vai retorar também,
somente um número
e ter um floute.
Com isso está adressando.
E,
como dica,
eu falo também,
por quê?
Quando a gente haça essa relque,
a gente pode ver
a função,
que,
ah,
basicamente,
a docs trins,
que está amazenada como
a documentação daquela função.
Mas nem essa grande ajuda,
não,
a grande ajuda,
a gente só dá um varia aqui.
É quando a gente está trabalhando
nas e dez,
né, que são,
é o dia de describe code.
Então como por exemplo,
eu uso vai escoujo.
É quando eu tomo o code
e defini uma função,
por exemplo,
defini a função soma.
Quando eu começo a escrever
algo, por exemplo,
a soma,
e vem aqui.
O,
o próprio vai escoujo,
ele já vem aqui,
me dá uma caixinha,
onde ele me passa
exatamente isso aqui.
Então é ajuda, né?
Então ele ajuda ali na experiência
do usuário,
quando a gente defini
via Dox Trim,
o versico,
ou outras ferramentas também,
eles conseguem botar
essa ferramenta de ajúbe,
que é o relque,
porque a gente consegue acessar
para que eu uso versico,
o delto dox Trim,
Python dox Trim,
o genelito,
é,
é automática esse modelo,
legal.
Então é,
deve ser uma,
é uma extensão na junta.
Lá do versico,
que faz isso automática.
É isso que eu vou
uso e trazemos asempos aqui
do,
porque o versico é tão bom,
e as extensões para mim
é o grande diferencial do versico hoje,
porque o resto está é muito parecido,
mas as extensões que o versico
está em,
são muito robustos,
eu de uma situação,
asempos,
de uma,
que faz a documentação automático,
e eu vou trazer um exemplo
aqui de um agora,
que,
ela faz,
o teste da função.
E o teste da função,
testar as funções,
é fundamental
para ver a instrução de funcionão direitinho,
a gente é necessário.
Porque às vezes a gente
só vai usar a nossa código,
e a uma cenária específica,
né, a gente não vai conseguir pensar
em tudo o que pode envolver ela.
E assim,
ser principal,
tipo,
errado,
acontece pegabug,
no código que faz parte,
mas quando a gente vai botar
a produção,
é fundamental não tem.
E existe trabalho,
existem proufções,
a gente tem daqui a trilha de que
aque na, na tipotem,
que é para fazer isso.
E também existem formas
mais,
mais claras,
assim,
mas,
é o som entre gente social,
também,
da gente fazer este teste.
No mais code,
a gente tem o que chama
Cobra Jem,
que era um tio codio,
né,
que era o code,
mas é o dia code Jem,
e o que ela faz?
Elas pegam a função,
então aqui no nosso caso,
boter que ela se funciona,
e ela testa
todos os comportamentos padrões
com base,
no que ela pensa.
Então ela gera
comportamentos,
então que,
a somando dois flow,
o somando dois inteiro,
o somando um inteiro em flow,
somando dois números negativos,
somando dois números positivos,
multiplicar com o zero,
o que ele faz?
Ele tenta todos os cenários
possíveis,
da quendenda aquela função,
e ele vai verificar no seu certo,
não?
Pra pegar,
tentar pegar os possíveis
erros daquela função,
e chegando ao nível
que ele vai mais afúrbolo,
porque é o que é o
humano,
às vezes consegue pensar,
porque ele trata
que é o rap-pef,
que são rap-pef,
é o caminho feliz,
é o caminho onde
é tudo acerto,
e ele chama
a indiaide case,
também,
que é os adquases,
aqui são
situações
que podem
em geral ele,
tipo,
situações casos estrenos,
que geram o erro
que podem ser um ponto de atenção.
Então,
essa é outra finalmente
muito legal,
é,
quando já ele não é uma
tipo,
que eu chamo de coisa,
ainda,
mas ele faz
esse teste das funções,
e isso é fundamental
quando eu vou estar em produção,
porque
vocês não vou querer,
depois,
alguém investe a mão,
e eu falo a polo,
sendo um view
que essa votação
muito negativa
função quebrava,
o Zorita Reconor,
então,
é bom,
hoje em dia,
a gente não consegue pensar em tudo,
também,
é normal,
tá com que você buie isso,
é do seu irmão,
e nem ele é ava que você
que pensa em tudo,
mas ela consegue pegar
estruturar
se não está extesindo,
bem rápido,
então,
algo que você demoraria
às vezes um dia
para estruturar,
ela consegue fazer,
não é fã bem rápido,
você consegue
ir preparar uma
uma demonstração
e mostrar
que
se eu funciona
da funcionaria
em diferentes cenários.
Mas,
isso aqui também,
é,
que a gente falou
quando tá desenvolvendo,
se eu ia ser assim,
não é muito necessário
se ficar testando todos os funções,
principal,
a pecaça a mesma,
a quantidade para produção.
E produção que a gente chama,
na pessoa,
quando você
tá botando ali algo
que vai ser consumido
por um usuário.
Então,
tem dois ambeir,
desenvolvimento que é você,
só marcar,
que não,
onde você está desenvolvendo,
e produção,
quando você começa
até contato com o mundo real,
quando você começa
a fazer com que pessoas
vejam
o seu trabalho.
Então,
por isso,
quer excessar,
também,
garantir que você consiga
cobrir todos os cenários de erro,
de novo.
E agora,
aqui pra projeçar,
sofre chanos,
acho que conseguiu passar
tudo os sonários
e funções.
Eu ambe a dia,
como as funções
elas
da o break,
como acontece o break
nas funções,
elas
as param de se chamar.
Então,
não é mais umão de envia
aqui no rei de hoje de manhã,
não é break a gente
até aula de funções.
Eu vou ter aqui na
apresentação.
E,
por hoje é só pessoas fechando
aqui no 9.05,
como a linha de aula,
espero que tenham gostado.
E agora,
na porta-feira a gente volta,
vamos fazer o nosso
anual sala mais prática.
Vamos ver algumas
apricações
de funções
e de sonários,
mais no mais avançados,
assim.
E,
é isso,
acho que,
se que eu me passado
todo o passo,
eu estou
por todos os passerem de funções
de sonários.
Ela que me enxerava
e veio mais pando,
também,
na semana que vem,
continuava você daqui na
nas prentes de Python Basque.
E é isso.
Também,
quem quiser me procurar
para falar do projeto,
trocar uma ideia,
também,
então, sempre disponível.
E,
e, buonôs,
vale o pessoal.
Vamos todos para vocês.
Valeu.
Valeu, Bruno.
Bruno.
Bruno.
Bruno.
Bruno,
Bruno,
Bruno,
Bruno,
Bruno,
Bruno,
